2024-04-21-16-32-32 390 1 get_ipython().run_line_magic('matplotlib', 'inline')	import matplotlib.pyplot as plt	from mpl_toolkits.mplot3d import Axes3D	import numpy as np	import scipy as sp	import cvxopt	from submission_utils import save_history, check_and_prepare_for_submission	from warnings import simplefilter	# ignore all future warnings	simplefilter(action='ignore', category=FutureWarning)
2024-04-21-16-32-32 390 2 get_ipython().run_line_magic('matplotlib', 'inline')	import matplotlib.pyplot as plt	from mpl_toolkits.mplot3d import Axes3D	import numpy as np	import scipy as sp	import cvxopt	from submission_utils import save_history, check_and_prepare_for_submission	from warnings import simplefilter	# ignore all future warnings	simplefilter(action='ignore', category=FutureWarning)
2024-04-21-16-32-32 390 3 import random	    	def permute(seq):	    seq_array = np.array(list(seq))	    return ''.join(np.random.permutation(seq_array))		def generate_master_sequence(alphabet_size, seq_length, start_char=70):	    # YOUR CODE HERE	    raise NotImplementedError()		def perturb(master_sequence, noise):	    # YOUR CODE HERE	    raise NotImplementedError()		def randomize_length(seqs, endpoint_trim_dim):	    # YOUR CODE HERE	    raise NotImplementedError()		def make_single_cluster_data(master_sequence, n_inliners, n_outliers, inliner_noise, outlier_noise, endpoint_trim_dim=None):	    # YOUR CODE HERE	    raise NotImplementedError()		def make_data(master_sequence, n_clusters, cluster_centres_noise, n_inliners, n_outliers, inliner_noise, outlier_noise, endpoint_trim_dim=None):	    # YOUR CODE HERE	    raise NotImplementedError()	    	save_history()
2024-04-21-16-32-32 390 4 np.random.seed(42)		# For example 1	seq = "temperature"	permuted_seq = permute(seq)	print(f'Original sequence: {seq}, permuted sequence: {permuted_seq}')
